{"ast":null,"code":"var _jsxFileName = \"/home/mitch/ReactTicTacToe/src/app.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  //removing the state from the children and lifting it up to the parent\n  //this way the parent doesn't need to go to every child, i.e. track of state is kept much more easily\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }, this);\n}\n_c = Square;\nexport default function Board() {\n  _s();\n  const [xIsNext, setXisNext] = useState(true);\n  const [squares, setSquares] = useState(Array(9).fill(null));\n  const winner = determineWinner(squares);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"turn\",\n      children: player\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[0],\n        onSquareClick: () => handleClick(0)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[1],\n        onSquareClick: () => handleClick(1)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[2],\n        onSquareClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[3],\n        onSquareClick: () => handleClick(3)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[4],\n        onSquareClick: () => handleClick(4)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[5],\n        onSquareClick: () => handleClick(5)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: [/*#__PURE__*/_jsxDEV(Square, {\n        value: squares[6],\n        onSquareClick: () => handleClick(6)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[7],\n        onSquareClick: () => handleClick(7)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[8],\n        onSquareClick: () => handleClick(8)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n  function handleClick(i) {\n    if (squares[i] || determineWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    setSquares(nextSquares);\n    setXisNext(!xIsNext);\n  }\n  function determineWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 4, 8], [2, 4, 6], [0, 3, 6], [1, 4, 7], [2, 5, 8]];\n    for (let i in lines) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a]; //return the sign of the winner\n      }\n    }\n    return null;\n  }\n}\n_s(Board, \"34wDl7A27AXPYToBqcbW6QKEzYk=\");\n_c2 = Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","_s","xIsNext","setXisNext","squares","setSquares","Array","fill","winner","determineWinner","player","handleClick","i","nextSquares","slice","lines","a","b","c","_c2","$RefreshReg$"],"sources":["/home/mitch/ReactTicTacToe/src/app.js"],"sourcesContent":["import { useState } from \"react\"\n\nfunction Square({value, onSquareClick}){//removing the state from the children and lifting it up to the parent\n    //this way the parent doesn't need to go to every child, i.e. track of state is kept much more easily\n    return (\n            <button className=\"square\" onClick={onSquareClick}>{value}</button>\n    )\n}\nexport default function Board(){\n    const [xIsNext, setXisNext] = useState(true)\n    const [squares, setSquares] = useState(Array(9).fill(null))\n\n    const winner = determineWinner(squares)\n\n    return (\n        <>\n            <div className=\"turn\">{player}</div>\n            <div className=\"board-row\">\n                <Square value={squares[0]} onSquareClick={()=>handleClick(0)}/>\n                <Square value={squares[1]} onSquareClick={()=>handleClick(1)}/>\n                <Square value={squares[2]} onSquareClick={()=>handleClick(2)}/>\n            </div>\n            <div className=\"board-row\">\n                <Square value={squares[3]} onSquareClick={()=>handleClick(3)}/>\n                <Square value={squares[4]} onSquareClick={()=>handleClick(4)}/>\n                <Square value={squares[5]} onSquareClick={()=>handleClick(5)}/>     \n            </div>\n            <div className=\"board-row\">\n                <Square value={squares[6]} onSquareClick={()=>handleClick(6)}/>\n                <Square value={squares[7]} onSquareClick={()=>handleClick(7)}/>\n                <Square value={squares[8]} onSquareClick={()=>handleClick(8)}/>       \n            </div>\n        </>\n    )\n\n    function handleClick(i){\n        if(squares[i] || determineWinner(squares)){\n            return\n        }\n        const nextSquares = squares.slice()\n        if(xIsNext){\n            nextSquares[i] = 'X'\n        }\n        else{\n            nextSquares[i] = 'O'\n        }\n        setSquares(nextSquares)\n        setXisNext(!xIsNext)\n    }\n\n    function determineWinner(squares){\n        const lines = [\n            [0,1,2],\n            [3,4,5],\n            [6,7,8],\n            [0,4,8],\n            [2,4,6],\n            [0,3,6],\n            [1,4,7],\n            [2,5,8]\n        ]\n        for(let i in lines){\n            const [a,b,c] = lines[i]\n            if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n                return squares[a]//return the sign of the winner\n            }\n        }\n        return null\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}