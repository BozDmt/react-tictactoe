{"ast":null,"code":"var _jsxFileName = \"/home/mitch/ReactTicTacToe/src/app.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { createElement } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 13\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  const winner = determineWinner(squares);\n  const nextPlayer = winner ? `Winner: ${winner}` : xIsNext ? 'Next player: X' : 'Next player: O';\n  const gSquares = [];\n  function CreateSquares({\n    iter\n  }) {\n    const divSquares = [];\n    for (let i = 0; i < 3; i++) {\n      divSquares.push( /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[iter + i],\n        onSquareClick: () => handleClick(iter + i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this));\n    }\n    return divSquares;\n  }\n  function GameSquares() {\n    for (let j = 0; j < 3; j++) {\n      gSquares.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"turn\",\n        children: /*#__PURE__*/_jsxDEV(CreateSquares, {\n          iter: j\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this));\n    }\n    return gSquares;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(GameSquares, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n  function handleClick(i) {\n    if (squares[i] || determineWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = 'X';\n    } else {\n      nextSquares[i] = 'O';\n    }\n    onPlay(nextSquares);\n  }\n  function determineWinner(squares) {\n    const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 4, 8], [2, 4, 6], [0, 3, 6], [1, 4, 7], [2, 5, 8]];\n    for (let i in lines) {\n      const [a, b, c] = lines[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a]; //return the sign of the winner\n      }\n    }\n    return null;\n  }\n}\n_c2 = Board;\nexport default function Game() {\n  _s();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [xIsNext, setXisNext] = useState(true);\n  const [currentMove, setCurrentMove] = useState(0);\n  const currentSquares = history[currentMove];\n  const moves = history.map((squares, move) => {\n    let description = '';\n    if (move > 0) {\n      description = `Go to move ${move}`;\n    } else if (move === currentMove) {\n      description = `You are at move ${move}`;\n    } else {\n      description = 'Go to game start';\n    }\n    const ListItem = () => {\n      if (move === currentMove) {\n        return /*#__PURE__*/createElement('p', null, `You are at move ${currentMove}`);\n      } else {\n        return /*#__PURE__*/createElement('button', {\n          onClick: () => jumpTo(move)\n        }, description);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(ListItem, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"New game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n    setXisNext(!xIsNext);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n    setXisNext(nextMove % 2 === 0);\n  }\n}\n_s(Game, \"vXOgPJWiMjgtze/6smgF63QB3xs=\");\n_c3 = Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","createElement","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","winner","determineWinner","nextPlayer","gSquares","CreateSquares","iter","divSquares","i","push","handleClick","GameSquares","j","nextSquares","slice","lines","a","b","c","_c2","Game","_s","history","setHistory","Array","fill","setXisNext","currentMove","setCurrentMove","currentSquares","moves","map","move","description","ListItem","jumpTo","handlePlay","nextHistory","length","nextMove","_c3","$RefreshReg$"],"sources":["/home/mitch/ReactTicTacToe/src/app.js"],"sourcesContent":["import { useState } from \"react\"\nimport { createElement } from \"react\"\n\nfunction Square({value, onSquareClick}){\n    return (\n            <button className=\"square\" onClick={onSquareClick}>{value}</button>\n    )\n}\nfunction Board({xIsNext, squares, onPlay}){\n    \n    const winner = determineWinner(squares)\n    \n    const nextPlayer = winner ? `Winner: ${winner}` : xIsNext ? 'Next player: X' : 'Next player: O' \n    \n    const gSquares = []\n\n    function CreateSquares({iter}){        \n        const divSquares = []\n        for(let i = 0; i < 3; i++){\n            divSquares.push(<Square value={squares[iter + i]} onSquareClick={()=>handleClick(iter + i)}/>)\n        }\n        return (divSquares)\n    }\n\n    function GameSquares(){\n        for(let j = 0; j < 3; j++){\n            gSquares.push(\n                <div className=\"turn\">\n                    <CreateSquares iter={j}/>\n                </div>\n            )\n        }\n        return (gSquares)\n    }\n\n    return (\n        <>\n          <GameSquares/>\n        </>\n    )\n\n    function handleClick(i){\n        if(squares[i] || determineWinner(squares)){\n            return\n        }\n        const nextSquares = squares.slice()\n        if(xIsNext){\n            nextSquares[i] = 'X'\n        }\n        else{\n            nextSquares[i] = 'O'\n        }\n        onPlay(nextSquares)\n    }\n\n    function determineWinner(squares){\n        const lines = [\n            [0,1,2],\n            [3,4,5],\n            [6,7,8],\n            [0,4,8],\n            [2,4,6],\n            [0,3,6],\n            [1,4,7],\n            [2,5,8]\n        ]\n        for(let i in lines){\n            const [a,b,c] = lines[i]\n            if(squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n                return squares[a]//return the sign of the winner\n            }\n        }\n        return null\n    }\n}\n\nexport default function Game(){\n    const [history, setHistory] = useState([Array(9).fill(null)])\n    const [xIsNext, setXisNext] = useState(true)\n    const [currentMove, setCurrentMove] = useState(0)\n    const currentSquares = history[currentMove]\n    \n    const moves = history.map((squares,move)=>{\n        let description = ''\n\n        if(move > 0){\n            description = `Go to move ${move}`\n        }else if(move === currentMove){\n            description = `You are at move ${move}`\n        }\n        else{\n            description = 'Go to game start'\n        }\n        \n        const ListItem = ()=>{ \n                        if(move === currentMove){\n                           return createElement('p',null,`You are at move ${currentMove}`)\n                        }\n                        else{\n                           return createElement('button',{onClick:()=>jumpTo(move)},description)\n                        }\n                    }\n\n        return(\n            <li key={move}>\n                <ListItem/>\n            </li>\n        )\n    })\n\n    return(\n        <div className=\"game\">\n            <div className=\"game-board\">\n                <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay}/>\n            </div>\n            <div className=\"game-info\">\n                <ol>{moves}</ol>\n            </div>\n            <button /**onClick={newGame} */>New game</button>\n        </div>\n    )\n\n    function handlePlay(nextSquares){\n        const nextHistory = [...history.slice(0,currentMove + 1),nextSquares]\n        setHistory(nextHistory)\n        setCurrentMove(nextHistory.length - 1)\n        setXisNext(!xIsNext)    \n    }\n    \n    function jumpTo(nextMove){\n        setCurrentMove(nextMove)\n        setXisNext(nextMove % 2 === 0)\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}